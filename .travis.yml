sudo: required
services:
- docker
language: python
python:
- '3.6'
before_install:
- docker version
- docker info
install:
- npm install newman@4.6.1
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- python -m unittest discover
- docker build -t swagger-spring-example:1.0.0 .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 swagger-spring-example:1.0.0
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs example_api
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag my_docker_reposetory/swagger_server my_docker_reposetory/swagger_server
- docker push my_docker_reposetory/swagger_server
env:
  global:
  - secure: kiw0m8DmVlR7C/8Ekoh339aVfbSUbYxRVrgtMFPhvIA0YhXCjygVJbPgIwmkLokh/NmdrqnDiGhiKvUwAw80z1dK4r9u+Y8xYiejd7pe+4n7Cd6j0uHUbTQbvLdQ4FWhq/otGlMwJyPHh/ng8tng/JafVX13wSOJtKZVoTG9g1qqqXbtnhoUYnO2StlHnJm+Sap7W1jcF17ZCwkFk4KKSdQphedwnHkbX2mFZAWFP/nPkG86m/LJDtkELimlZBYLY0pNSy0aBtXwAay5QWGMhcggJeauVVfbdYILdYpEs1N0idIrzjFmmscg4xw0ojoRciyrKo2JQ0RReKSlCPNkqI4LJe1sboXCIvQI0dFyxBfoagr6mk+esKnLwUs44et6+Kt5EjhkdWGJGawRJoUABbxTAD5ikcpq6kI7wDOxhee986AMoAYJw2GicvWsaeEPEoGwVo71CGZ2Tyqq3HBtEIS1d2IEeJNPweR+SSqxA27fMR3KpZ96VTq2Pmgm1HhuF6Pp5BnzXXMku+nTFrRNwtuhSMSDDQELc+RPdaHK9YoM6R5GELKmfxeh2tgH6vHvNYHwWj9utDmcdZHdgw1ELzquFhZ+KuK5sMfrXaC6t0J9r0rfXxde2Uy4H8LjtWRrAFEtuZC4IT7JUT9/VIIWR2xzuSFX4lfaceLSR7cI4qI=
  - secure: WdQDoIfk1qSfzNUa8M18knqtOVBgBwrZrhZKs2K/M9OPPrkTBonJfZfy02yYjaRlQM+V9h36+ugm3TKJA0xI6F82y1mxUvhUYjMMlhTA0TM90jSHiH9WnpQHCI+XX1dfOh8P9h5YbLPquTUyCYoaIgLoyqq4vfkxosWpeMZOGpoNFaOdnvwuXaLK0wqWOlE6x9zcWuLHh7lHDwwMpEFy3sMH9dwWZjP3pRGbvivA46ACrgaqO7fPokPCWA14lroDk4F5A4Qg8mNcZGkmE3STB0RJVylB9FB9DGUX4BlwC+GoaQuFGL3AHnt5uH4JDDC3QDyjgm5+Rnx9oSerfyYfD1Y10E3Tcyb7G7hqNfWdjEyaC4rvM4R5llyw0WObXkgJaiOTNdLp2f46MJGwChTuhyJ0kbGWX01w99DU5OIL4xcubI/3UFz+OHFFFpc8FlZjulpJwWdr03MQOLXWVqVMMPzTFBVmNNRqsIMvUJnoecyNpBVjXSq/hLjEdg0iGg3aSa4rlSgBgwJle1MaLzv14t7lc5/xQjm6YANYt0oS2EB3XlxIeQMyAAScY0qGorKNyoDrEmBgZ6wAvzj6+8+MG90Vd1nds33HwfgIGckvz07znbX6qBCGAJSd0nl+P/jY/lpXlr3Q0j2Y8casVF2iHoZ9eOPYvDOcjwOqCn+9Lmg=
